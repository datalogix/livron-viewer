 @import url(dialog.css);
 @import url(text_layer_builder.css);
 @import url(annotation_layer_builder.css);
 @import url(xfa_layer_builder.css);
 @import url(annotation_editor_layer_builder.css);

 :root {
   --viewer-container-height: 0;
   --pdfViewer-padding-bottom: 0;
   --page-margin: 1px auto -8px;
   --page-border: 16px solid transparent;
   --spreadHorizontalWrapped-margin-LR: -3.5px;
   --loading-icon-delay: 400ms;
 }

 * {
  box-sizing: content-box;
 }

 .pdfViewer * {
  box-sizing: content-box;
 }

 @media screen and (forced-colors: active) {
   :root {
     --pdfViewer-padding-bottom: 9px;
     --page-margin: 8px auto -1px;
     --page-border: 1px solid CanvasText;
     --spreadHorizontalWrapped-margin-LR: 3.5px;
   }
 }

 [data-main-rotation="90"] {
   transform: rotate(90deg) translateY(-100%);
 }
 [data-main-rotation="180"] {
   transform: rotate(180deg) translate(-100%, -100%);
 }
 [data-main-rotation="270"] {
   transform: rotate(270deg) translateX(-100%);
 }

 #hiddenCopyElement,
 .hiddenCanvasElement {
   position: absolute;
   top: 0;
   left: 0;
   width: 0;
   height: 0;
   display: none;
 }

 .dropzone {
  background-color: blue !important;
  border: 5px solid red;
  inset: 40px 0 0;
  position: fixed;
 }

 .dropzone.dragover{
  border: 5px solid green;
  display: block !important;
 }

 .pdfViewer {
   /* Define this variable here and not in :root to avoid to reflow all the UI
      when scaling (see #15929). */
   --scale-factor: 1;

   padding-bottom: var(--pdfViewer-padding-bottom);

   --hcm-highlight-filter: none;
   --hcm-highlight-selected-filter: none;

   @media screen and (forced-colors: active) {
     --hcm-highlight-filter: invert(100%);
   }

   &.copyAll {
     cursor: wait;
   }

   .canvasWrapper {
      /*position: relative;
      z-index: 1;*/
     overflow: hidden;
     width: 100%;
     height: 100%;

     canvas {
       margin: 0;
       display: block;

       &[hidden] {
         display: none;
       }

       &[zooming] {
         width: 100%;
         height: 100%;
       }

       .structTree {
         contain: strict;
       }
     }
   }
 }

 .pdfViewer .page {
   direction: ltr;
   width: 816px;
   height: 1056px;
   margin: var(--page-margin);
   position: relative;
   overflow: visible;
   border: var(--page-border);
   background-clip: content-box;
   background-color: rgb(255 255 255);
 }

 .pdfViewer .dummyPage {
   position: relative;
   width: 0;
   height: var(--viewer-container-height);
 }

 .pdfViewer.noUserSelect {
   user-select: none;
 }

 /*#if GENERIC*/
 .pdfViewer.removePageBorders .page {
   margin: 0 auto 10px;
   border: none;
 }
 /*#endif*/

 /*#if COMPONENTS*/
 .pdfViewer.singlePageView {
   display: inline-block;
 }

 .pdfViewer.singlePageView .page {
   margin: 0;
   border: none;
 }
 /*#endif*/

 .pdfViewer:is(.scrollHorizontal, .scrollWrapped),
 .spread {
   margin-inline: 3.5px;
   text-align: center;
 }

 .pdfViewer.scrollHorizontal,
 .spread {
   white-space: nowrap;
 }

 /*#if GENERIC*/
 .pdfViewer.removePageBorders,
 /*#endif*/
 .pdfViewer:is(.scrollHorizontal, .scrollWrapped) .spread {
   margin-inline: 0;
 }

 .spread :is(.page, .dummyPage),
 .pdfViewer:is(.scrollHorizontal, .scrollWrapped) :is(.page, .spread) {
   display: inline-block;
   vertical-align: middle;
 }

 .spread .page,
 .pdfViewer:is(.scrollHorizontal, .scrollWrapped) .page {
   margin-inline: var(--spreadHorizontalWrapped-margin-LR);
 }

 /*#if GENERIC*/
 .pdfViewer.removePageBorders .spread .page,
 .pdfViewer.removePageBorders:is(.scrollHorizontal, .scrollWrapped) .page {
   margin-inline: 5px;
 }
 /*#endif*/

 .pdfViewer .page.loadingIcon::after {
   position: absolute;
   top: 0;
   left: 0;
   content: "";
   width: 100%;
   height: 100%;
   background: purple url("images/loading-icon.gif") center no-repeat;
   display: none;
   /* Using a delay with background-image doesn't work,
      consequently we use the display. */
   transition-property: display;
   transition-delay: var(--loading-icon-delay);
   z-index: 5;
   contain: strict;
 }

 .pdfViewer .page.loading::after {
   display: block;
 }

 .pdfViewer .page:not(.loading)::after {
   transition-property: none;
   display: none;
 }

 .pdfPresentationMode .pdfViewer {
   padding-bottom: 0;
 }

 .pdfPresentationMode .spread {
   margin: 0;
 }

 .pdfPresentationMode .pdfViewer .page {
   margin: 0 auto;
   border: 2px solid transparent;
 }




 .findbar {
  display: none;
  position: absolute;
  top: 40px;
  left: 40px;
  background: white;
  padding: 6px;
 }

 .findbar.findbar-open {
  display: block;
 }

.findbar input[type="text"] {
  display: block;
  width: 100%;
  border: 2px solid gray;
  padding: 4px;
}
